{"version":3,"sources":["webpack:///src/components/page/Monitor2.vue","webpack:///./src/components/page/Monitor2.vue?dea7","webpack:///./src/components/page/Monitor2.vue"],"names":["mqtt","__webpack_require__","options","connectTimeout","clientId","parseInt","Math","random","keepAliveInterval","username","sysconstant","password","clean","Monitor2","name","data","msg","msg2","dj","fs","dd","cc","ee","ee2","client","connected","option","tooltip","formatter","series","radius","min","max","startAngle","endAngle","splitNumber","center","type","progress","show","detail","valueAnimation","fontSize","offsetCenter","value","axisTick","length","lineStyle","width","color","splitLine","itemStyle","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","roundCap","pointer","icon","axisLine","axisLabel","distance","mounted","this","mqttMSG","chartChange","created","destroyed","beforeDestroy","destroyConnection","methods","_this","myEcharts","$echarts","init","document","getElementById","setInterval","setOption","change","$router","push","path","_this2","connect","on","console","log","subscribe","qos","error","topic","message","toString","JSON","parse","DD","red","fire","close","end","page_Monitor2","render","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","staticStyle","height","margin-top","attrs","id","Component","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/6.4d9214ab19227fc793c9.js","sourcesContent":["<template>\n  <div class=\"top\">\n    <!-- <div style=\"width:100%;height: 100px;\"> -->\n    <!-- 测试数据:{{msg}} -->\n\n    <div class=\"button\">\n      <div id=\"chartLineBox\"\n           style=\"width: 100%;height: 700px;margin-top:-25px\">\n        <!-- <span>温度:{{dd.temp}}</span><br /> -->\n      </div>\n    </div>\n    <!-- </div> -->\n    <!-- <div style=\"height:100px;text-align:center;display:flex;  justify-content: center;\n\">\n      <el-col :span=\"12\">\n        <el-button type=\"success\"\n                   size=\"small\"\n                   class=\"conn-btn\"\n                   style=\"margin-right: 20px;\"\n                   :disabled=\"client.connected\"\n                   @click=\"mqttMSG()\">\n          {{ client.connected ? 'Connected' : 'Connect' }}\n        </el-button>\n        <el-button @click=\"change\">切换</el-button>\n\n        <el-button v-if=\"client.connected\"\n                   type=\"danger\"\n                   size=\"small\"\n                   class=\"conn-btn\"\n                   @click=\"destroyConnection\">\n          Disconnect\n        </el-button>\n      </el-col>\n    </div> -->\n  </div>\n\n</template>\n<script>\n// import mqtt from 'mqtt'\nvar mqtt = require('mqtt')\n\nimport {\n  MQTT_SERVICE,\n  MQTT_USERNAME2,\n  MQTT_PASSWORD2,\n} from '../../utils/sysconstant'\n\nconst options = {\n  connectTimeout: 40000,\n  clientId: 'monitorsssss2_' + parseInt(Math.random() * 100 + 800, 10),\n  keepAliveInterval: 10, //当时间为60时会出现断链问题\n  username: MQTT_USERNAME2,\n  password: MQTT_PASSWORD2,\n  clean: true,\n}\n\nexport default {\n  name: 'Monitor2',\n  data() {\n    return {\n      msg: '',\n      msg2:{\n        dj:0,\n        fs:0\n      },\n      dd: '',\n      cc: '',\n      ee: '',\n      ee2: '',\n      client: {\n        connected: true,\n      },\n      option: {\n        tooltip: {\n          formatter: '{a} <br/>{b} : {c}',\n        },\n        series: [\n          // 第一个为fs的状态,第二个为dj状态,第三个为red,第四个为fire\n          {\n            radius: '30%', //设置大小\n            min: 0,\n            max: 1,\n             startAngle: 180,\n            endAngle: 0,\n            splitNumber: 1,\n            center: ['25%', '30%'],\n            name: '空气净化风扇开关',\n            type: 'gauge',\n            progress: {\n              show: true,\n            },\n            detail: {\n             valueAnimation: true,\n              fontSize: 30,\n              offsetCenter: [0, '-50%'],\n              formatter: function (value) {\n                if (value === 1) {\n                  return '开'\n                } else if (value === 0) {\n                  return '关'\n                }\n                return ''\n              },\n            },\n            // 设置小刻度\n            axisTick: {\n              splitNumber: 3,\n              length: 4,\n              lineStyle: {\n                width: 2,\n                color: '#999',\n              },\n            },\n            // 小刻度的属性\n            splitLine: {\n              length: 8,\n              // show:false,\n              lineStyle: {\n                width: 3,\n                color: '#999',\n              },\n            },\n            data: [\n              {\n                value: 0,\n                name: '空气净化风扇',\n              },\n            ],\n          },\n          // MQ135--第二个图\n          {\n            radius: '30%', //设置大小\n            min: 0,\n            max: 1,\n            splitNumber: 1,\n startAngle: 180,\n            endAngle: 0,\n            center: ['75%', '30%'],\n            name: '窗户开关',\n            type: 'gauge',\n            progress: {\n              show: true,\n            },\n\n            detail: {\n            valueAnimation: true,\n              fontSize: 30,\n              offsetCenter: [0, '-50%'],\n              formatter: function (value) {\n                if (value === 1) {\n                  return '开'\n                } else if (value === 0) {\n                  return '关'\n                }\n                return ''\n              },\n\n            },\n            // 设置小刻度\n            axisTick: {\n              splitNumber: 3,\n              length: 4,\n              lineStyle: {\n                width: 2,\n                color: '#999',\n              },\n            },\n            // 小刻度的属性\n            splitLine: {\n              length: 8,\n              // show:false,\n              lineStyle: {\n                width: 3,\n                color: '#999',\n              },\n            },\n            data: [\n              {\n                value: 0,\n                name: '窗户',\n              },\n            ],\n          },\n          /*detail: {\n              valueAnimation: true,\n              fontSize: 60,\n              offsetCenter: [0, '70%'],\n              formatter: function (value) {\n                if (value === 1) {\n                  return '发现火焰'\n                } else if (value === 0) {\n                  return '无火焰'\n                }\n                return ''\n              },\n            }, */\n          // 第三个图\n\n          {\n            radius: '30%', //设置大小\n            name: '红外传感器',\n            center: ['25%', '65%'], //设置位置\n            type: 'gauge',\n            startAngle: 180,\n            endAngle: 0,\n            min: 0,\n            max: 1,\n            splitNumber: 1,\n            itemStyle: {\n              color: '#58D9F9',\n              shadowColor: 'rgba(0,138,255,0.45)',\n              shadowBlur: 10,\n              shadowOffsetX: 2,\n              shadowOffsetY: 2,\n            },\n            progress: {\n              show: true,\n              roundCap: true,\n              width: 18,\n            },\n            pointer: {\n              icon: 'path://M2090.36389,615.30999 L2090.36389,615.30999 C2091.48372,615.30999 2092.40383,616.194028 2092.44859,617.312956 L2096.90698,728.755929 C2097.05155,732.369577 2094.2393,735.416212 2090.62566,735.56078 C2090.53845,735.564269 2090.45117,735.566014 2090.36389,735.566014 L2090.36389,735.566014 C2086.74736,735.566014 2083.81557,732.63423 2083.81557,729.017692 C2083.81557,728.930412 2083.81732,728.84314 2083.82081,728.755929 L2088.2792,617.312956 C2088.32396,616.194028 2089.24407,615.30999 2090.36389,615.30999 Z',\n              length: '65%',\n              width: 16,\n              offsetCenter: [0, '5%'],\n            },\n            axisLine: {\n              roundCap: true,\n              lineStyle: {\n                width: 20,\n              },\n            },\n            axisTick: {\n              splitNumber: 1,\n              length: 0,\n              lineStyle: {\n                width: 2,\n                color: '#FFB6C1',\n              },\n            },\n            splitLine: {\n              // length: 23,\n              show: false,\n              lineStyle: {\n                width: 3,\n                color: '#999',\n              },\n            },\n            axisLabel: {\n              // show:false,\n              distance: 8, //左右两边标签对应的距离\n              length: 4,\n              color: '#FFB6C1',\n              fontSize: 20,\n            },\n\n            detail: {\n              valueAnimation: true,\n              fontSize: 30,\n              offsetCenter: [0, '50%'],\n              formatter: function (value) {\n                if (value === 1) {\n                  return '红外传感器-有人经过'\n                } else if (value === 0) {\n                  return '红外传感器-无人经过'\n                }\n                return ''\n              },\n            },\n            data: [\n              {\n                value: 0,\n              },\n            ],\n          },\n          // 第四个图\n          {\n            radius: '30%', //设置大小\n            name: '火焰监测',\n            center: ['75%', '65%'], //设置位置\n            type: 'gauge',\n            startAngle: 180,\n            endAngle: 0,\n            min: 0,\n            max: 1,\n            splitNumber: 1,\n            itemStyle: {\n              color: '#58D9F9',\n              shadowColor: 'rgba(0,138,255,0.45)',\n              shadowBlur: 10,\n              shadowOffsetX: 2,\n              shadowOffsetY: 2,\n            },\n            progress: {\n              show: true,\n              roundCap: true,\n              width: 18,\n            },\n            pointer: {\n              icon: 'path://M2090.36389,615.30999 L2090.36389,615.30999 C2091.48372,615.30999 2092.40383,616.194028 2092.44859,617.312956 L2096.90698,728.755929 C2097.05155,732.369577 2094.2393,735.416212 2090.62566,735.56078 C2090.53845,735.564269 2090.45117,735.566014 2090.36389,735.566014 L2090.36389,735.566014 C2086.74736,735.566014 2083.81557,732.63423 2083.81557,729.017692 C2083.81557,728.930412 2083.81732,728.84314 2083.82081,728.755929 L2088.2792,617.312956 C2088.32396,616.194028 2089.24407,615.30999 2090.36389,615.30999 Z',\n              length: '65%',\n              width: 16,\n              offsetCenter: [0, '5%'],\n            },\n            axisLine: {\n              roundCap: true,\n              lineStyle: {\n                width: 20,\n              },\n            },\n            axisTick: {\n              splitNumber: 1,\n              length: 0,\n              lineStyle: {\n                width: 2,\n                color: '#FFB6C1',\n              },\n            },\n            splitLine: {\n              // length: 23,\n              show: false,\n              lineStyle: {\n                width: 3,\n                color: '#999',\n              },\n            },\n            axisLabel: {\n              // show:false,\n              distance: 8, //左右两边标签对应的距离\n              length: 4,\n              color: '#FFB6C1',\n              fontSize: 20,\n            },\n\n            detail: {\n              valueAnimation: true,\n              fontSize: 30,\n              offsetCenter: [0, '50%'],\n              formatter: function (value) {\n                if (value === 1) {\n                  return '发现火焰'\n                } else if (value === 0) {\n                  return '无火焰'\n                }\n                return ''\n              },\n            },\n            data: [\n              {\n                value: 0,\n              },\n            ],\n          },\n        ],\n      },\n    } //return 到此结束\n  }, //data到这里结束\n\n  mounted() {\n    // this.chartChange()\n    this.mqttMSG()\n    this.chartChange()\n  },\n\n  created() {\n    // this.test()\n  },\n  destroyed() {\n    // client.end()\n  },\n  beforeDestroy() {\n    //   // client.end();\n    //  client.disconnect();\n    //   client.close();\n    //  this.client.unsubscribe();\n    //    this.client.unconnect();\n    this.destroyConnection()\n  },\n\n  methods: {\n    /*chartChange() {\n      const myEcharts = this.$echarts.init(\n        document.getElementById('chartLineBox'),\n        'gauge'\n      )\n      // 使用刚指定的配置项和数据显示图表。\n\n      setInterval(() => {\n        //var random = (Math.random() * 100).toFixed(2);\n        // var random1 = this.dd.lx\n        // var random2 = this.dd.mq2\n\n        // var random = 90;\n        // this.option.series[0].data[0].value = random1\n        // this.option.series[1].data[0].value = random2\n        // this.option2.series[0].data[0].value = random2\n\n        myEcharts.setOption(this.option, true)\n        // myEcharts2.setOption(this.option2, true)\n      }, 400)\n    },*/\n\n    chartChange() {\n      const myEcharts = this.$echarts.init(\n        document.getElementById('chartLineBox'),\n        'gauge'\n      )\n      // const myEcharts2 = this.$echarts.init(\n      //   document.getElementById('chartLineBox2'),\n      //   'gauge'\n      // )\n      // 使用刚指定的配置项和数据显示图表。\n\n      setInterval(() => {\n        //var random = (Math.random() * 100).toFixed(2)\n\n        // var random = 90;\n        // this.option.series[0].data[0].value = random1\n        // this.option.series[1].data[0].value = random2\n        // this.option.series[2].data[0].value = random3\n        // this.option.series[3].data[0].value = random4\n        // this.option2.series[0].data[0].value = random2\n\n        myEcharts.setOption(this.option, true)\n        // myEcharts2.setOption(this.option2, true)\n      }, 400)\n    },\n    change() {\n      this.$router.push({ path: '/test' })\n    },\n\n    mqttMSG() {\n      // mqtt连接\n      //  if (client.connected) {\n      //   client.end();\n      // }\n      this.client = mqtt.connect(MQTT_SERVICE, options)\n\n      this.client.on('connect', () => {\n        console.log('Connection succeeded!')\n        this.client.subscribe(\n          ['zwt/test', 'zwt/test/state'],\n          {\n            qos: 1,\n          },\n          (error) => {\n            if (!error) {\n              console.log('订阅成功')\n            } else {\n              console.log('订阅失败')\n            }\n          }\n        )\n      })\n      // 接收消息处理\n      this.client.on('message', (topic, message) => {\n        console.log('收到来自', topic, '的消息', message.toString())\n        if (topic == 'zwt/test/state') {\n          var msg2 = message.toString()\n          console.log('收到执行器状态信息:' + msg2)\n          this.ee2 = JSON.parse(msg2)\n          this.msg2.dj = this.ee2.dj\n          this.msg2.fs = this.ee2.fs\n          console.log('风扇状态为:' + this.msg2.fs)\n          console.log('窗户状态为:' + this.msg2.dj)\n          this.option.series[0].data[0].value = this.msg2.fs\n          this.option.series[1].data[0].value = this.msg2.dj\n        }\n        console.log(message)\n        // 取出red和fire\n        if(topic=='zwt/test'){\n       this.msg = message.toString()\n        var DD = this.msg //赋值\n        this.ee = JSON.parse(DD)\n        \n        this.option.series[2].data[0].value = this.ee.red //红外\n        //mqtt发送为0代表有火焰,则在该条件下赋值为1显示火焰\n        if (this.ee.fire == 0) {\n          this.option.series[3].data[0].value = 1\n        } else {\n          this.option.series[3].data[0].value = 0\n        }\n        }\n        // this.option.series[3].data[0].value = this.ee.fire //火焰\n      })\n      this.client.on('error', (error) => {\n        console.log('Connection failed', error)\n      })\n      // this.client.on('message', (topic, message) => {\n      //   this.receiveNews = this.receiveNews.concat(message)\n      //   console.log(`Received message ${message} from topic ${topic}`)\n      // })\n    },\n\n    close() {\n      console.log('111')\n    },\n    destroyConnection() {\n      if (this.client.connected) {\n        try {\n          this.client.end()\n          this.client = {\n            connected: false,\n          }\n          console.log('Successfully disconnected!')\n        } catch (error) {\n          console.log('Disconnect failed', error.toString())\n        }\n      }\n    },\n  },\n}\n</script>\n\n<style scope>\n.top {\n  /* margin-top: -30px; */\n  /* display: float;\n  justify-content: center;\n  text-align: center;\n  align-items: center; */\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  width: 800px;\n  height: 430px;\n  margin: -310px 0 0 -400px;\n}\n.button {\n  display: flex;\n  justify-content: center;\n  margin-top: -30px;\n}\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/page/Monitor2.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"top\"},[_c('div',{staticClass:\"button\"},[_c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"700px\",\"margin-top\":\"-25px\"},attrs:{\"id\":\"chartLineBox\"}})])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-e59f6f7a\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/page/Monitor2.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-e59f6f7a\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Monitor2.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Monitor2.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Monitor2.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-e59f6f7a\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Monitor2.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/page/Monitor2.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}