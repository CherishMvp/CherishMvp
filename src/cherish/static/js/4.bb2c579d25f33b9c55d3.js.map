{"version":3,"sources":["webpack:///./src/utils/initMqtt.js","webpack:///src/components/page/Monitor.vue","webpack:///./src/components/page/Monitor.vue?f39a","webpack:///./src/components/page/Monitor.vue"],"names":["__WEBPACK_IMPORTED_MODULE_0_mqtt__","__webpack_require__","__WEBPACK_IMPORTED_MODULE_0_mqtt___default","n","initMqtt","options","_ref","hostname","port","userName","timeout","keepAlive","cleanSession","ssl","password","path","this","clean","connectTimeout","reconnectPeriod","clientId","username","connectUrl","prototype","connect","onSuccess","onLost","onMessageArrival","client","mqtt","error","console","log","on","topic","message","toString","disconnect","end","parseInt","Math","random","keepAliveInterval","sysconstant","Monitor","data","datas","datass","datas3","datas4","myChart","myChart2","msg","dd","temp","humi","aa","connected","mounted","_this","mqttMSG","$nextTick","drawChart","timer","setInterval","push","$moment","date","format","length","splice","option","getOption","xAxis","series","value","setOption","$forceUpdate","destroyed","clearInterval","methods","$echarts","init","document","getElementById","title","text","tooltip","trigger","grid","containLabel","top","toolbox","left","show","feature","dataZoom","yAxisIndex","dataView","readOnly","magicType","type","restore","saveAsImage","legend","right","bottom","yAxis","name","max","lineStyle","width","markPoint","markLine","radius","center","startAngle","endAngle","min","splitNumber","itemStyle","color","progress","pointer","axisLine","axisTick","distance","splitLine","axisLabel","fontSize","anchor","offsetCenter","detail","valueAnimation","lineHeight","borderRadius","fontWeight","formatter","change","$router","_this2","connect_default","a","e","subscribe","qos","JSON","parse","mq7","mq2","mq135","page_Monitor","render","_h","$createElement","_c","_self","staticClass","staticStyle","height","margin-top","attrs","id","_v","span","click","staticRenderFns","Component","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"oDAAA,IAAAA,EAAAC,EAAA,QAAAC,EAAAD,EAAAE,EAAAH,GAMA,SAASI,EAASC,GAAS,IAAAC,EAWrBD,MATFE,EAFuBD,EAEvBC,SACAC,EAHuBF,EAGvBE,KAKAC,GARuBH,EAIvBI,QAJuBJ,EAKvBK,UALuBL,EAMvBM,aANuBN,EAOvBO,IAPuBP,EAQvBG,UACAK,EATuBR,EASvBQ,SATuBR,EAUvBS,KAEFC,KAAKT,SAAWA,GAAY,iBAC5BS,KAAKR,KAAOA,GAAQ,KACpBQ,KAAKX,SACHY,OAAO,EACPC,eAAgB,IAChBC,gBAAiB,IACjBC,SAAU,mBACVC,SAAUZ,GAAY,QACtBK,SAAUA,GAAY,SACtBC,KAAK,SAEPC,KAAKM,WAAL,SAA2BN,KAAKT,SAAhC,IAA4CS,KAAKR,KAGnDJ,EAASmB,UAAUC,QAAU,SAASC,EAAWC,EAAQC,GACvD,IACEX,KAAKY,OAASC,IAAKL,QAAQR,KAAKM,WAAYN,KAAKX,SACjD,MAAOyB,GACPC,QAAQC,IAAI,qBAAsBF,GAYpC,OATAd,KAAKY,OAAOK,GAAG,UAAW,kBAAMR,MAChCT,KAAKY,OAAOK,GAAG,QAAS,kBAAMP,MAC9BV,KAAKY,OAAOK,GAAG,UAAW,WACxBF,QAAQC,IAAI,UAEdhB,KAAKY,OAAOK,GAAG,UAAW,SAACC,EAAOC,GAAR,OACxBR,EAAiBO,EAAOC,EAAQC,cAElCL,QAAQC,IAAIhB,KAAKY,QACVZ,KAAKY,QAEdxB,EAASmB,UAAUc,WAAa,WAC1BrB,KAAKY,SACPZ,KAAKY,OAAOU,MACZtB,KAAKY,OAAS,0ICjClBvB,GACAa,eAAA,IACAE,SAAA,gBAAAmB,SAAA,IAAAC,KAAAC,SAAA,QACAC,kBAAA,GAEArB,SAAAsB,EAAA,EACA7B,SAAA6B,EAAA,EACA1B,OAAA,GAEA2B,GACAC,KADA,WAEA,OACAA,QACAC,SACAC,UACAC,UACAC,UACAC,WACAC,YAEAC,OACAC,GAAA,GACAC,KAAA,GACAC,KAAA,GACAC,IACAF,KAAA,GACAC,KAAA,IAEA3B,QACA6B,WAAA,KAKAC,QAzBA,WAyBA,IAAAC,EAAA3C,KACAA,KAAA4C,UAEA7B,QAAAC,IAAA,SACAhB,KAAA6C,UAAA,WACAF,EAAAG,YAEAH,EAAAI,MAAAC,YAAA,WACAL,EAAAd,KAAAoB,KAAAN,EAAAO,QAAAP,EAAAQ,MAAAC,OAAA,aAIAT,EAAAb,MAAAmB,KAAAN,EAAAH,GAAAF,MACAK,EAAAZ,OAAAkB,KAAAN,EAAAH,GAAAD,MACAI,EAAAX,OAAAiB,KAAAN,EAAAH,GAAAF,MACAK,EAAAV,OAAAgB,KAAAN,EAAAH,GAAAD,MAGAI,EAAAd,KAAAwB,OAAA,IACAV,EAAAX,OAAAsB,OAAA,KACAX,EAAAV,OAAAqB,OAAA,MAIAX,EAAAd,KAAAwB,OAAA,IAEAV,EAAAd,KAAAyB,OAAA,KACAX,EAAAb,MAAAwB,OAAA,KACAX,EAAAZ,OAAAuB,OAAA,MAGA,IAAAC,EAAAZ,EAAAT,QAAAsB,YACAD,EAAAE,MAAA,GAAA5B,KAAAc,EAAAd,KAEA0B,EAAAG,OAAA,GAAA7B,KAAAc,EAAAb,MACAyB,EAAAG,OAAA,GAAA7B,KAAAc,EAAAZ,OACAwB,EAAAG,OAAA,GAAA7B,KAAA,GAAA8B,MAAAhB,EAAAX,OACAuB,EAAAG,OAAA,GAAA7B,KAAA,GAAA8B,MAAAhB,EAAAV,OAGAlB,QAAAC,IAAA,SAKAD,QAAAC,IAAA,QAAAuC,EAAAG,OAAA,GAAA7B,KAAA,GAAA8B,OACA5C,QAAAC,IAAA,QAAAuC,EAAAG,OAAA,GAAA7B,KAAA,GAAA8B,OACAhB,EAAAT,QAAA0B,UAAAL,GACAZ,EAAAkB,gBACA,QAGAC,UA7EA,WA8EAC,cAAA/D,KAAA+C,OACA/C,KAAAY,OAAAU,MACAP,QAAAC,IAAA,sBAEAgD,SACAlB,UADA,WAEA9C,KAAAkC,QAAAlC,KAAAiE,SAAAC,KAAAC,SAAAC,eAAA,SAEApE,KAAAkC,QAAA0B,WACAS,OACAC,KAAA,UAEAC,SACAC,QAAA,QAGAC,MACAC,cAAA,EACAC,IAAA,OAGAC,SACAD,IAAA,MACAE,KAAA,QACAC,MAAA,EACAC,SACAC,UACAC,WAAA,QAEAC,UAAAC,UAAA,GACAC,WAAAC,MAAA,eACAC,WACAC,iBAGAC,QAEA3D,MAAA,WACA4D,MAAA,SAEAC,OAAA,OAGAjC,OACA4B,KAAA,WACAxD,SAEA8D,QAEAC,KAAA,KACAP,KAAA,QACAQ,IAAA,MAGAnC,SAGAkC,KAAA,KACAP,KAAA,OACAS,WACAC,MAAA,GAGAlE,KAAA7B,KAAA8B,MACAkE,WACAnE,OACAwD,KAAA,MAAAO,KAAA,QACAP,KAAA,MAAAO,KAAA,SAGAK,UACApE,OAAAwD,KAAA,UAAAO,KAAA,WAIAA,KAAA,KACAP,KAAA,OACAS,WACAC,MAAA,GAGAlE,KAAA7B,KAAA+B,OACAiE,WACAnE,OACAwD,KAAA,MAAAO,KAAA,QACAP,KAAA,MAAAO,KAAA,SAGAK,UACApE,OAAAwD,KAAA,UAAAO,KAAA,WAKAM,OAAA,MACAN,KAAA,KACAP,KAAA,QACAc,QAAA,aACAC,WAAA,IACAC,UAAA,GACAC,IAAA,EACAT,IAAA,GACAU,YAAA,EACAC,WACAC,MAAA,WAEAC,UACA5B,MAAA,EACAiB,MAAA,IAEAY,SACA7B,MAAA,GAEA8B,UACAd,WACAC,MAAA,KAGAc,UACAC,UAAA,GACAP,YAAA,EACAT,WACAC,MAAA,EACAU,MAAA,SAGAM,WACAD,UAAA,GACAzD,OAAA,GACAyC,WACAC,MAAA,EACAU,MAAA,SAGAO,WACAF,UAAA,EACAL,MAAA,OACAQ,SAAA,IAEAC,QACApC,MAAA,GAEAT,OACAS,MAAA,EACAqC,cAAA,YACAF,SAAA,GACAR,MAAA,WAEAW,QACAC,gBAAA,EACAtB,MAAA,MACAuB,WAAA,GACAC,aAAA,EACAJ,cAAA,UACAF,SAAA,GACAO,WAAA,SACAC,UAAA,aACAhB,MAAA,WAEA5E,OAEA8B,MAAA3D,KAAAgC,OACA4D,KAAA,SAMAM,OAAA,MACAN,KAAA,KACAP,KAAA,QACAc,QAAA,aACAC,WAAA,IACAC,UAAA,GACAC,IAAA,EACAT,IAAA,GACAU,YAAA,EACAC,WACAC,MAAA,WAEAC,UACA5B,MAAA,EACAiB,MAAA,IAEAY,SACA7B,MAAA,GAEA8B,UACAd,WACAC,MAAA,KAGAc,UACAC,UAAA,GACAP,YAAA,EACAT,WACAC,MAAA,EACAU,MAAA,SAGAM,WACAD,UAAA,GACAzD,OAAA,GACAyC,WACAC,MAAA,EACAU,MAAA,SAGAO,WACAF,UAAA,EACAL,MAAA,OACAQ,SAAA,IAEAC,QACApC,MAAA,GAEAT,OACAS,MAAA,EACAqC,cAAA,YACAF,SAAA,GACAR,MAAA,WAEAW,QACAC,gBAAA,EACAtB,MAAA,MACAuB,WAAA,GACAC,aAAA,EACAJ,cAAA,UACAF,SAAA,GACAO,WAAA,SACAC,UAAA,YACAhB,MAAA,WAEA5E,OAEA8B,MAAA3D,KAAAiC,OACA2D,KAAA,YAOA8B,OA/OA,WAgPA1H,KAAA2H,QAAA1E,MAAAlD,KAAA,eAEA6C,QAlPA,WAkPA,IAAAgF,EAAA5H,KAKAA,KAAAY,OAAAiH,EAAAC,EAAAtH,QAAAmB,EAAA,EAAAtC,GAEAW,KAAAY,OAAAK,GAAA,mBAAA8G,GACAhH,QAAAC,IAAA,SACA4G,EAAAhH,OAAAoH,UACA,YAEAC,IAAA,GAEA,SAAAnH,GACAA,EAGAC,QAAAC,IAAA,QAFAD,QAAAC,IAAA,YAcAhB,KAAAY,OAAAK,GAAA,mBAAAC,EAAAC,GACAJ,QAAAC,IAAA,OAAAE,EAAA,MAAAC,EAAAC,YAEAwG,EAAAxF,IAAAjB,EAAAC,WACAwG,EAAAvF,GAAA6F,KAAAC,MAAAP,EAAAxF,KACAwF,EAAApF,GAAA4F,IAAAR,EAAAvF,GAAA+F,IACAR,EAAApF,GAAA6F,IAAAT,EAAAvF,GAAAgG,IACAT,EAAApF,GAAA8F,MAAAV,EAAAvF,GAAAiG,MACAV,EAAApF,GAAAF,KAAAsF,EAAAvF,GAAAC,KACAsF,EAAApF,GAAAD,KAAAqF,EAAAvF,GAAAE,KAGAxB,QAAAC,IAAA4G,EAAApF,GAAA4F,KACArH,QAAAC,IAAA4G,EAAApF,GAAA6F,KACAtH,QAAAC,IAAA4G,EAAApF,GAAA8F,OACAvH,QAAAC,IAAA4G,EAAAtF,MACAvB,QAAAC,IAAA4G,EAAArF,QAIAvC,KAAAY,OAAAK,GAAA,qBAAAH,GACAC,QAAAC,IAAA,QAAAF,KAGAd,KAAAY,OAAAK,GAAA,iBAAAH,GACAC,QAAAC,IAAA,QAAAF,QCrZeyH,GADEC,OAFjB,WAA0B,IAAaC,EAAbzI,KAAa0I,eAA0BC,EAAvC3I,KAAuC4I,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,QAAkBF,EAAA,OAAYG,aAAa/C,MAAA,OAAAgD,OAAA,QAAAC,aAAA,QAAoDC,OAAQC,GAAA,UAAvLlJ,KAAoMmJ,GAAA,KAAAR,EAAA,UAA2BM,OAAOG,KAAA,MAAWT,EAAA,aAAkB1H,IAAIoI,MAAvQrJ,KAAuQ0H,UAAvQ1H,KAA2RmJ,GAAA,iBAEpSG,oBCCjB,IAcAC,EAdyBtK,EAAQ,OAcjCuK,CACE5H,EACA2G,GATF,EAVA,SAAAkB,GACExK,EAAQ,SAaV,kBAEA,MAUeyK,EAAA,QAAAH,EAAiB","file":"static/js/4.bb2c579d25f33b9c55d3.js","sourcesContent":["import mqtt from \"mqtt\";\n/*\n使用方法\nthis.client= new initMqtt().connect()\n*/\n\nfunction initMqtt(options) {\n  const {\n    hostname,\n    port,\n    timeout,\n    keepAlive,\n    cleanSession,\n    ssl,\n    userName,\n    password,\n    path\n  } = options || {};\n  this.hostname = hostname || \"www.ai0626.top\";\n  this.port = port || 8084;\n  this.options = {\n    clean: true, // 保留会话\n    connectTimeout: 2000, // 超时时间\n    reconnectPeriod: 500, // 重连时间间隔\n    clientId: \"clientId-zwt6666\",\n    username: userName || \"admin\",\n    password: password || \"123456\",\n    path:'/mqtt'\n  };\n  this.connectUrl = `wss://${this.hostname}:${this.port}`;\n}\n\ninitMqtt.prototype.connect = function(onSuccess, onLost, onMessageArrival) {\n  try {\n    this.client = mqtt.connect(this.connectUrl, this.options);\n  } catch (error) {\n    console.log(\"mqtt.connect error\", error);\n  }\n  \n  this.client.on(\"connect\", () => onSuccess());\n  this.client.on(\"error\", () => onLost());\n  this.client.on(\"timeout\", () => {\n    console.log('....')\n  });\n  this.client.on(\"message\", (topic, message) =>\n    onMessageArrival(topic, message.toString())\n  );\n  console.log(this.client);\n  return this.client;\n};\ninitMqtt.prototype.disconnect = function() {\n  if (this.client) {\n    this.client.end();\n    this.client = null;\n  }\n};\n\nexport default initMqtt;\n\n\n// WEBPACK FOOTER //\n// ./src/utils/initMqtt.js","<!--  -->\n<template>\n  <div class=\"top\">\n\n    <div id=\"line\"\n         style=\"width: 100%;height:700px;margin-top:20px\"></div>\n    <el-col :span=\"24\">\n\n      <el-button @click=\"change\">切换</el-button>\n    </el-col>\n  </div>\n</template>\n<script>\nimport initMqtt from '../../utils/initMqtt'\nimport mqtt from 'mqtt'\nimport {\n  MQTT_SERVICE,\n  MQTT_USERNAME,\n  MQTT_PASSWORD,\n} from '../../utils/sysconstant'\nconst options = {\n  connectTimeout: 40000,\n  clientId: 'hhhhhmonitor_' + parseInt(Math.random() * 100 + 800, 10),\n  keepAliveInterval: 10, //当时间为60时会出现断链问题\n\n  username: MQTT_USERNAME,\n  password: MQTT_PASSWORD,\n  clean: true,\n}\nexport default {\n  data() {\n    return {\n      data: [],\n      datas: [],\n      datass: [],\n      datas3: [], //温度\n      datas4: [], //湿度\n      myChart: {},\n      myChart2: {},\n\n      msg: [],\n      dd: '',\n      temp: '',\n      humi: '',\n      aa: {\n        temp: '',\n        humi: '',\n      },\n      client: {\n        connected: false,\n      },\n    }\n  },\n\n  mounted() {\n    this.mqttMSG()\n\n    console.log('start')\n    this.$nextTick(() => {\n      this.drawChart()\n      // console.log( this.$moment(this.date).format(\"hh:mm:ss\"))\n      this.timer = setInterval(() => {\n        this.data.push(this.$moment(this.date).format('hh:mm:ss'))\n        //将从MQTT格式化好的数据依次存入各个折线对应的数组中。\n        // 只需要三个烟雾传感器的值就可以了\n        // s和ss存放折线图数据，每个数组5个。s3和s4各存放一个温湿度的数据\n        this.datas.push(this.aa.temp)\n        this.datass.push(this.aa.humi) //随机数代替\n        this.datas3.push(this.aa.temp)\n        this.datas4.push(this.aa.humi) //随机数代替\n        // this.datass2.push(this.aa.humi)\n        //取数组中最新的1个数值.即温湿度是实时显示一个的\n        if (this.data.length > 1) {\n          this.datas3.splice(0, 1)\n          this.datas4.splice(0, 1)\n          // this.datass2.splice(0, 1)\n        }\n        //取数组中最新的五个数值\n        if (this.data.length > 5) {\n          // 让时间轴和数据都保持最新的五个\n          this.data.splice(0, 1)\n          this.datas.splice(0, 1)\n          this.datass.splice(0, 1)\n          // this.datass2.splice(0, 1)\n        }\n        var option = this.myChart.getOption()\n        option.xAxis[0].data = this.data\n        //将数据以数组的形式赋给各自的data\n        option.series[0].data = this.datas\n        option.series[1].data = this.datass\n        option.series[2].data[0].value = this.datas3\n        option.series[3].data[0].value = this.datas4\n        // console.log( option.xAxis)\n\n        console.log('开始打印:')\n        //纵坐标值1\n\n        //纵坐标值2\n\n        console.log('temp:' + option.series[2].data[0].value)\n        console.log('humi:' + option.series[3].data[0].value)\n        this.myChart.setOption(option)\n        this.$forceUpdate()\n      }, 2000)\n    })\n  },\n  destroyed() {\n    clearInterval(this.timer)\n    this.client.end()\n    console.log('stop-MQTT-connect')\n  },\n  methods: {\n    drawChart() {\n      this.myChart = this.$echarts.init(document.getElementById('line'))\n      // 绘制图表\n      this.myChart.setOption({\n        title: {\n          text: '温湿度实时图',\n        },\n        tooltip: {\n          trigger: 'axis',\n        },\n\n        grid: {\n          containLabel: true,\n          top: '55%',\n        },\n        //工具栏\n        toolbox: {\n          top: '50%',\n          left: 'right',\n          show: true,\n          feature: {\n            dataZoom: {\n              yAxisIndex: 'none',\n            },\n            dataView: { readOnly: false },\n            magicType: { type: ['line', 'bar'] },\n            restore: {},\n            saveAsImage: {},\n          },\n        },\n        legend: {\n          // 可以通过left，right四个方向属性来设置百分比\n          data: ['温度', '湿度'],\n          right: 'center',\n          // orient: \"vertical\",\n          bottom: '50%',\n          // center:[\"40%\",\"50%\"]\n        },\n        xAxis: {\n          type: 'category',\n          data: [],\n        },\n        yAxis: [\n          {\n            name: '数值',\n            type: 'value',\n            max: 100,\n          },\n        ],\n        series: [\n          // s和ss是折线图，其他不变\n          {\n            name: '温度',\n            type: 'line',\n            lineStyle: {\n              width: 1,\n            },\n            //data接收赋值项\n            data: this.datas,\n            markPoint: {\n              data: [\n                { type: 'max', name: 'Max' },\n                { type: 'min', name: 'Min' },\n              ],\n            },\n            markLine: {\n              data: [{ type: 'average', name: 'Avg' }],\n            },\n          },\n          {\n            name: '湿度',\n            type: 'line',\n            lineStyle: {\n              width: 1,\n            },\n            //data接收赋值项\n            data: this.datass,\n            markPoint: {\n              data: [\n                { type: 'max', name: 'Max' },\n                { type: 'min', name: 'Min' },\n              ],\n            },\n            markLine: {\n              data: [{ type: 'average', name: 'Avg' }],\n            },\n          },\n          //温湿度等(3)\n          {\n            radius: '30%', //设置大小\n            name: '温度',\n            type: 'gauge',\n            center: ['25%', '30%'],\n            startAngle: 200,\n            endAngle: -20,\n            min: 0,\n            max: 60, //最大范围\n            splitNumber: 6, //分成几大格\n            itemStyle: {\n              color: '#fd6e1f',\n            },\n            progress: {\n              show: true,\n              width: 30,\n            },\n            pointer: {\n              show: false,\n            },\n            axisLine: {\n              lineStyle: {\n                width: 30,\n              },\n            },\n            axisTick: {\n              distance: -45,\n              splitNumber: 4, //每个大刻度里面分成几小格\n              lineStyle: {\n                width: 2,\n                color: '#999',\n              },\n            },\n            splitLine: {\n              distance: -50,\n              length: 10,\n              lineStyle: {\n                width: 3,\n                color: '#999',\n              },\n            },\n            axisLabel: {\n              distance: -5,\n              color: '#999',\n              fontSize: 14,\n            },\n            anchor: {\n              show: false,\n            },\n            title: {\n              show: true,\n              offsetCenter: ['0%', '50%'],\n              fontSize: 30,\n              color: '#6dff3b',\n            },\n            detail: {\n              valueAnimation: true,\n              width: '60%',\n              lineHeight: 40,\n              borderRadius: 8,\n              offsetCenter: [0, '-15%'],\n              fontSize: 30,\n              fontWeight: 'bolder',\n              formatter: '{value} °C',\n              color: '#6dff3b',\n            },\n            data: [\n              {\n                value: this.datas3,\n                name: '温度',\n              },\n            ],\n          },\n          //第二个\n          {\n            radius: '30%', //设置大小\n            name: '湿度',\n            type: 'gauge',\n            center: ['75%', '30%'], //设置位置\n            startAngle: 200,\n            endAngle: -20,\n            min: 0,\n            max: 90,\n            splitNumber: 9,\n            itemStyle: {\n              color: '#4169E1',\n            },\n            progress: {\n              show: true,\n              width: 30,\n            },\n            pointer: {\n              show: false,\n            },\n            axisLine: {\n              lineStyle: {\n                width: 30,\n              },\n            },\n            axisTick: {\n              distance: -45,\n              splitNumber: 4,\n              lineStyle: {\n                width: 2,\n                color: '#999',\n              },\n            },\n            splitLine: {\n              distance: -50,\n              length: 10,\n              lineStyle: {\n                width: 3,\n                color: '#999',\n              },\n            },\n            axisLabel: {\n              distance: -5,\n              color: '#999',\n              fontSize: 14,\n            },\n            anchor: {\n              show: false,\n            },\n            title: {\n              show: true,\n              offsetCenter: ['0%', '50%'],\n              fontSize: 30,\n              color: '#6dff3b',\n            },\n            detail: {\n              valueAnimation: true,\n              width: '60%',\n              lineHeight: 40,\n              borderRadius: 8,\n              offsetCenter: [0, '-15%'],\n              fontSize: 30,\n              fontWeight: 'bolder',\n              formatter: '{value} %',\n              color: '#6dff3b',\n            },\n            data: [\n              {\n                value: this.datas4,\n                name: '湿度',\n              },\n            ],\n          },\n        ],\n      })\n    },\n    change() {\n      this.$router.push({ path: '/monitor2' })\n    },\n    mqttMSG() {\n      // mqtt连接\n      //  if (client.connected) {\n      //   client.end();\n      // }\n      this.client = mqtt.connect(MQTT_SERVICE, options)\n\n      this.client.on('connect', (e) => {\n        console.log('连接成功:')\n        this.client.subscribe(\n          'zwt/test',\n          {\n            qos: 0,\n          },\n          (error) => {\n            if (!error) {\n              console.log('订阅成功')\n            } else {\n              console.log('订阅失败')\n            }\n          }\n        )\n      })\n      // 接收消息处理\n      /*处理流程：\n      *首先连接MQTT后，对收到的主题进行处理。对JSON格式序列化。toString()返回该对象的\n      字符串表示。JSON.parse()方法将JSON格式字符串转换为JS对象。要放入echarts数组中的值，先存在aa中的各个属性值中。然后依次写入前五个到各个图表的数组中。\n      *\n      * \n*/\n      this.client.on('message', (topic, message) => {\n        console.log('收到来自', topic, '的消息', message.toString())\n        //console.log(message)\n        this.msg = message.toString()\n        this.dd = JSON.parse(this.msg)\n        this.aa.mq7 = this.dd.mq7\n        this.aa.mq2 = this.dd.mq2\n        this.aa.mq135 = this.dd.mq135\n        this.aa.temp = this.dd.temp\n        this.aa.humi = this.dd.humi\n\n        //   //取出主题中的lx和mq2\n        console.log(this.aa.mq7)\n        console.log(this.aa.mq2)\n        console.log(this.aa.mq135)\n        console.log(this.temp)\n        console.log(this.humi)\n      })\n\n      // 断开发起重连\n      this.client.on('reconnect', (error) => {\n        console.log('正在重连:', error)\n      })\n      // 链接异常处理\n      this.client.on('error', (error) => {\n        console.log('连接失败:', error)\n      })\n    },\n  },\n}\n</script>\n<style scoped>\n.top {\n  /* margin-top: -30px; */\n  /* display: float;\n  justify-content: center;\n  text-align: center;\n  align-items: center; */\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  width: 800px;\n  height: 430px;\n  margin: -360px 0 0 -430px;\n}\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/page/Monitor.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"top\"},[_c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"700px\",\"margin-top\":\"20px\"},attrs:{\"id\":\"line\"}}),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":24}},[_c('el-button',{on:{\"click\":_vm.change}},[_vm._v(\"切换\")])],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-16477c42\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/page/Monitor.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-16477c42\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Monitor.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Monitor.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Monitor.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-16477c42\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Monitor.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-16477c42\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/page/Monitor.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}